// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sport.API.Data;

#nullable disable

namespace Sport.API.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250209220023_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sport.API.Sports.Models.Sport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("Sport.API.Sports.Models.Sport", b =>
                {
                    b.OwnsOne("Sport.API.Sports.ValueObjects.Description", "Description", b1 =>
                        {
                            b1.Property<Guid>("SportId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Description");

                            b1.HasKey("SportId");

                            b1.ToTable("Sports");

                            b1.WithOwner()
                                .HasForeignKey("SportId");
                        });

                    b.OwnsOne("Sport.API.Sports.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("SportId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name");

                            b1.HasKey("SportId");

                            b1.ToTable("Sports");

                            b1.WithOwner()
                                .HasForeignKey("SportId");
                        });

                    b.Navigation("Description");

                    b.Navigation("Name");
                });
#pragma warning restore 612, 618
        }
    }
}
