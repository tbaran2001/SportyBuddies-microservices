// <auto-generated />
using System;
using Buddies.Grpc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Buddies.Grpc.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241221232747_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Buddies.Grpc.Models.Buddy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MatchedProfileId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OppositeBuddyId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Buddies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05f27813-c15a-4263-bb7e-a39c97844ade"),
                            CreatedOnUtc = new DateTime(2024, 12, 21, 23, 27, 47, 364, DateTimeKind.Utc).AddTicks(3325),
                            MatchedProfileId = new Guid("7d2e9d97-9813-4431-8c4b-bfb7168a39de"),
                            OppositeBuddyId = new Guid("144e8dac-820b-44ba-b2c5-de68b0615e16"),
                            ProfileId = new Guid("0d76b338-8575-43d9-afb0-b5af4c40a3a8")
                        },
                        new
                        {
                            Id = new Guid("144e8dac-820b-44ba-b2c5-de68b0615e16"),
                            CreatedOnUtc = new DateTime(2024, 12, 21, 23, 27, 47, 364, DateTimeKind.Utc).AddTicks(3325),
                            MatchedProfileId = new Guid("0d76b338-8575-43d9-afb0-b5af4c40a3a8"),
                            OppositeBuddyId = new Guid("05f27813-c15a-4263-bb7e-a39c97844ade"),
                            ProfileId = new Guid("7d2e9d97-9813-4431-8c4b-bfb7168a39de")
                        },
                        new
                        {
                            Id = new Guid("bec9834b-dcdb-423d-930c-f2516d1737bc"),
                            CreatedOnUtc = new DateTime(2024, 12, 21, 23, 27, 47, 364, DateTimeKind.Utc).AddTicks(3340),
                            MatchedProfileId = new Guid("f85e8537-8b27-4259-80ae-14716f8d5a3a"),
                            OppositeBuddyId = new Guid("7427e169-da90-461f-839e-6f6f1e496c5f"),
                            ProfileId = new Guid("0d76b338-8575-43d9-afb0-b5af4c40a3a8")
                        },
                        new
                        {
                            Id = new Guid("7427e169-da90-461f-839e-6f6f1e496c5f"),
                            CreatedOnUtc = new DateTime(2024, 12, 21, 23, 27, 47, 364, DateTimeKind.Utc).AddTicks(3340),
                            MatchedProfileId = new Guid("0d76b338-8575-43d9-afb0-b5af4c40a3a8"),
                            OppositeBuddyId = new Guid("bec9834b-dcdb-423d-930c-f2516d1737bc"),
                            ProfileId = new Guid("f85e8537-8b27-4259-80ae-14716f8d5a3a")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
