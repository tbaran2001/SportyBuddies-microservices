// <auto-generated />
using System;
using Buddies.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Buddies.API.Data.Migrations
{
    [DbContext(typeof(BuddyDbContext))]
    partial class BuddyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Buddies.API.Buddies.Models.Buddy", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MatchedProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OppositeBuddyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Buddies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7097c74-1bcc-4f5b-80d7-949720c2c1b7"),
                            CreatedOnUtc = new DateTime(2025, 2, 8, 21, 22, 19, 793, DateTimeKind.Utc).AddTicks(4608),
                            MatchedProfileId = new Guid("45662e8e-71f1-4de0-b69d-0f70ba09bd71"),
                            OppositeBuddyId = new Guid("b6a6486c-cadd-4046-bbc9-66ab6e7e6d1b"),
                            ProfileId = new Guid("6e57134d-939d-407b-979a-bb7403fb43a2")
                        },
                        new
                        {
                            Id = new Guid("b6a6486c-cadd-4046-bbc9-66ab6e7e6d1b"),
                            CreatedOnUtc = new DateTime(2025, 2, 8, 21, 22, 19, 793, DateTimeKind.Utc).AddTicks(4608),
                            MatchedProfileId = new Guid("6e57134d-939d-407b-979a-bb7403fb43a2"),
                            OppositeBuddyId = new Guid("f7097c74-1bcc-4f5b-80d7-949720c2c1b7"),
                            ProfileId = new Guid("45662e8e-71f1-4de0-b69d-0f70ba09bd71")
                        },
                        new
                        {
                            Id = new Guid("e914ad86-d518-4792-aa83-54d1e732b263"),
                            CreatedOnUtc = new DateTime(2025, 2, 8, 21, 22, 19, 793, DateTimeKind.Utc).AddTicks(4625),
                            MatchedProfileId = new Guid("b9f551f2-307d-44cb-8a94-adba9d804cfe"),
                            OppositeBuddyId = new Guid("8fc5fbad-bdbd-4adc-bf0c-14c0f5d6bb02"),
                            ProfileId = new Guid("6e57134d-939d-407b-979a-bb7403fb43a2")
                        },
                        new
                        {
                            Id = new Guid("8fc5fbad-bdbd-4adc-bf0c-14c0f5d6bb02"),
                            CreatedOnUtc = new DateTime(2025, 2, 8, 21, 22, 19, 793, DateTimeKind.Utc).AddTicks(4625),
                            MatchedProfileId = new Guid("6e57134d-939d-407b-979a-bb7403fb43a2"),
                            OppositeBuddyId = new Guid("e914ad86-d518-4792-aa83-54d1e732b263"),
                            ProfileId = new Guid("b9f551f2-307d-44cb-8a94-adba9d804cfe")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
